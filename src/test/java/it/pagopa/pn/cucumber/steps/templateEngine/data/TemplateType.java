package it.pagopa.pn.cucumber.steps.templateEngine.data;

import java.util.Arrays;

public enum TemplateType {

    AAR_PRESA_IN_CARICO("ATTESTAZIONE OPPONIBILE A TERZI DI NOTIFICA PRESA IN CARICO"),
    AAR_NOTIFICA_DIGITALE("ATTESTAZIONE OPPONIBILE A TERZI DI NOTIFICA DIGITALE"),
    AAR_AVVENUTO_ACCESSO("ATTESTAZIONE OPPONIBILE A TERZI DI AVVENUTO ACCESSO"),
    AAR_FUNZIONAMENTO_RIPRISTINO("ATTESTAZIONE OPPONIBILE A TERZI DI MALFUNZIONAMENTO E RIPRISTINO"),
    AAR_ANNULLAMENTO_NOTIFICA("DICHIARAZIONE DI ANNULLAMENTO NOTIFICA"),
    DEPOSITO_AVVENUTA_RICEZIONE("DEPOSITO DI AVVENUTA RICEZIONE"),
    AVVISO_AVVENUTA_RICEZIONE("AVVISO DI AVVENUTA RICEZIONE"),
    AVVISO_AVVENUTA_RICEZIONE_RADD("AVVISO DI AVVENUTA RICEZIONE RADD"),
    AVVISO_CORTESIA_EMAIL("AVVISO DI CORTESIA EMAIL"),
    AVVISO_CORTESIA_PEC("AVVISO DI CORTESIA PEC"),
    OTP_CONFERMA_EMAIL("OTP DI CONFERMA EMAIL"),
    OTP_CONFERMA_PEC("OTP DI CONFERMA PEC"),
    PEC_VALIDA("PEC VALIDA"),
    PEC_NON_VALIDA("PEC NON VALIDA"),
    AVVISO_CORTESIA_SMS("AVVISO DI CORTESIA SMS"),
    OTP_CONFERMA_SMS("OTP DI CONFERMA SMS"),
    AVVISO_CORTESIA_SMS_OBJECT("AVVISO DI CORTESIA PER Lâ€™SMS OBJECT"),
    OTP_CONFERMA_EMAIL_OBJECT("OTP DI CONFERMA EMAIL OBJECT"),
    OTP_CONFERMA_PEC_OBJECT("OTP DI CONFERMA PEC OBJECT"),
    PEC_VALIDA_OBJECT("PEC VALIDA OBJECT"),
    PEC_NON_VALIDA_OBJECT("PEC NON VALIDA OBJECT");

    private String value;

    TemplateType(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    public static TemplateType fromValue(String value) {
        return Arrays.stream(TemplateType.values())
                .filter(data -> data.value.equals(value))
                .findFirst()
                .orElseThrow(() -> new IllegalArgumentException("NO ENUM VALUE PRESENT"));
    }
}
